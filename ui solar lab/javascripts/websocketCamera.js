// Generated by CoffeeScript 1.8.0
(function() {
  var WebSocketCamera,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  WebSocketCamera = (function() {
    WebSocketCamera.prototype.wsCamera = null;

    WebSocketCamera.prototype.URLWS = "ws://62.204.201.214:8081";

    function WebSocketCamera() {
      this.onmessage = __bind(this.onmessage, this);
      this.onopen = __bind(this.onopen, this);
      var wsCameraIsReady;
      wsCameraIsReady = false;
      this.wsCamera = new WebSocket(this.URLWS);
      this.wsCamera.binaryType = 'arraybuffer';
      this.wsCamera.onopen = this.onopen;
      this.wsCamera.onmessage = this.onmessage;
      this.wsCamera.onclose = this.onclose;
    }

    WebSocketCamera.prototype.onopen = function() {
      var jsonRequest;
      console.log("ws camera inciado");
      jsonRequest = JSON.stringify({
        "method": "getSensorData",
        "accessRole": 'observer',
        "updateFrequency": "1",
        "sensorId": "video"
      });
      return this.wsCamera.send(jsonRequest);
    };

    WebSocketCamera.prototype.onmessage = function(msg) {
      var arrayBuffer, blob, bytes, image, reader, wsCameraIsReady;
      arrayBuffer = msg.data;
      bytes = new Uint8Array(arrayBuffer);
      blob = new Blob([bytes.buffer]);
      image = document.getElementById('imgCamera');
      reader = new FileReader();
      reader.onload = function(e) {
        return image.src = e.target.result;
      };
      reader.readAsDataURL(blob);
      if (!wsCameraIsReady) {
        wsCameraIsReady = true;
        if (wsIsReady) {
          return myApp.hidePleaseWait();
        }
      }
    };

    WebSocketCamera.prototype.onclose = function(code) {
      return console.log(code);
    };

    return WebSocketCamera;

  })();

  window.WebSocketCamera = WebSocketCamera;

}).call(this);
